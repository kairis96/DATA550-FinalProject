table.dat <- read.csv("crisp_sub_dataset_clean.csv")
#check if the data was loaded correctly
head(table.dat)
pairs(table.dat[, c("ckd_epi", "age", "BMI", "tkv")],
main = "Scatter Plot Matrix of eGFR, Age, BMI, and Systolic BP",
pch = 21, bg = "lightblue")
#pairs
colnames(table.dat)
pairs(table.dat[, c("ckd_epi", "age", "anp", "tkv")],
main = "Scatter Plot Matrix of eGFR, Age, BMI, and Systolic BP",
pch = 21, bg = "lightblue")
#stratify variables you want to show on your table
names(table.dat)[names(table.dat) == "age"] <- "Age in Years"
names(table.dat)[names(table.dat) == "age"] <- "Age in Years"
names(table.dat)[names(table.dat) == "ckd_epi"] <- "eGFR"
names(table.dat)[names(table.dat) == "anp"] <- "proANP"
names(table.dat)[names(table.dat) == "tkv"] <- "Total Kidney Volume"
pairs(table.dat[, c("eGFR", "Age in Years", "proANP", "Total Kidney Volume")],
main = "Scatter Plot Matrix of eGFR, Age, proANP, and Total Kidney Volume",
pch = 21, bg = "lightblue")
# Create Age Group variable
table.dat$`Age in Years` <- cut(table.dat$`Age in Years`, breaks = c(0, 30, 50, 70, 100),
labels = c("0-30", "31-50", "51-70", "71+"),
right = FALSE)
ggplot(table.dat, aes(x = Gender, y = eGFR, fill = Gender)) +
geom_boxplot() +
facet_wrap(~ Age_Group) +
labs(title = "eGFR by Gender and Age Group",
x = "Gender",
y = "Estimated GFR (mL/min/1.73m²)") +
theme_minimal()
library(ggplot2)
# Box plot of eGFR by Gender and Age Group
ggplot(table.dat, aes(x = Gender, y = eGFR, fill = Gender)) +
geom_boxplot() +
facet_wrap(~ Age_Group) +
labs(title = "eGFR by Gender and Age Group",
x = "Gender",
y = "Estimated GFR (mL/min/1.73m²)") +
theme_minimal()
table.dat <- read.csv("crisp_sub_dataset_clean.csv")
# Create Age Group variable
table.dat$Age_Group <- cut(table.dat$`Age in Years`, breaks = c(0, 30, 50, 70, 100),
labels = c("0-30", "31-50", "51-70", "71+"),
right = FALSE)
#Rename columns
names(table.dat)[names(table.dat) == "age"] <- "Age in Years"
# Create Age Group variable
table.dat$Age_Group <- cut(table.dat$`Age in Years`, breaks = c(0, 30, 50, 70, 100),
labels = c("0-30", "31-50", "51-70", "71+"),
right = FALSE)
#Rename columns
names(table.dat)[names(table.dat) == "gender"] <- "Gender"
ggplot(table.dat, aes(x = Gender, y = eGFR, fill = Gender)) +
geom_boxplot() +
facet_wrap(~ Age_Group) +
labs(title = "eGFR by Gender and Age Group",
x = "Gender",
y = "Estimated GFR (mL/min/1.73m²)") +
theme_minimal()
names(table.dat)[names(table.dat) == "ckd_epi"] <- "eGFR"
ggplot(table.dat, aes(x = Gender, y = eGFR, fill = Gender)) +
geom_boxplot() +
facet_wrap(~ Age_Group) +
labs(title = "eGFR by Gender and Age Group",
x = "Gender",
y = "Estimated GFR (mL/min/1.73m²)") +
theme_minimal()
#Rename columns
names(table.dat)[names(table.dat) == "age"] <- "Age"
#Rename columns
names(table.dat)[names(table.dat) == "age"] <- "Age"
#load the data
table.dat <- read.csv("crisp_sub_dataset_clean.csv")
# Select relevant variables for correlation
cor_data <- table.dat %>% select(ckd_epi, age, emgc_ca, epotcon, esodc_ca)
# Calculate correlation matrix
cor_matrix <- cor(cor_data, use = "complete.obs")
# Melt the correlation matrix for ggplot
cor_melted <- melt(cor_matrix)
install.packages("reshape2")
# Melt the correlation matrix for ggplot
cor_melted <- melt(cor_matrix)
# Load the reshape2 package
library(reshape2)
# Melt the correlation matrix for ggplot
cor_melted <- melt(cor_matrix)
# Heatmap of correlations
ggplot(cor_melted, aes(Var1, Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0, limit = c(-1,1), name="Correlation") +
labs(title = "Correlation Matrix Heatmap of eGFR, Age, BMI, Systolic BP, and Diastolic BP",
x = "Variables",
y = "Variables") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
names(table.dat)[names(table.dat) == "age"] <- "Age"
names(table.dat)[names(table.dat) == "ckd_epi"] <- "eGFR"
names(table.dat)[names(table.dat) == "anp"] <- "proANP"
names(table.dat)[names(table.dat) == "tkv"] <- "Total Kidney Volume"
#Paired scatter plots
colnames(table.dat)
pairs(table.dat[, c("eGFR", "Age in Years", "proANP", "Total Kidney Volume")],
main = "Scatter Plot Matrix of eGFR, Age, proANP, and Total Kidney Volume",
pch = 21, bg = "lightblue")
pairs(table.dat[, c("eGFR", "Age in Years", "proANP", "Total Kidney Volume")],
main = "Scatter Plot Matrix of eGFR, Age, proANP, and Total Kidney Volume",
pch = 21, bg = "lightblue")
#Paired scatter plots
colnames(table.dat)
pairs(table.dat[, c("eGFR", "Age", "proANP", "Total Kidney Volume")],
main = "Scatter Plot Matrix of eGFR, Age, proANP, and Total Kidney Volume",
pch = 21, bg = "lightblue")
# Create Age Group variable
table.dat$Age_Group <- cut(table.dat$Age, breaks = c(0, 30, 50, 70, 100),
labels = c("0-30", "31-50", "51-70", "71+"),
right = FALSE)
# Box plot of eGFR by Gender and Age Group
ggplot(table.dat, aes(x = gender, y = eGFR, fill = gender)) +
geom_boxplot() +
facet_wrap(~ Age_Group) +
labs(title = "eGFR by Gender and Age Group",
x = "Gender",
y = "Estimated GFR") +
theme_minimal()
names(table.dat)[names(table.dat) == "emgc_ca"] <- "Magnesium"
names(table.dat)[names(table.dat) == "epotcon"] <- "Potassium"
names(table.dat)[names(table.dat) == "esodc_ca"] <- "Sodium"
# Select relevant variables for correlation
cor_data <- table.dat %>% select(eGFR, Age, Magnesium, Potassium, Sodium)
# Calculate correlation matrix
cor_matrix <- cor(cor_data, use = "complete.obs")
# Melt the correlation matrix for ggplot
cor_melted <- melt(cor_matrix)
# Heatmap of correlations
ggplot(cor_melted, aes(Var1, Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0, limit = c(-1,1), name="Correlation") +
labs(title = "Correlation Matrix Heatmap of eGFR, Age, Magnesium Conc., Potassium Conc., and Sodium Conc. in Urine",
x = "Variables",
y = "Variables") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
names(table.dat)[names(table.dat) == "age"] <- "Age"
names(table.dat)[names(table.dat) == "ckd_epi"] <- "eGFR"
names(table.dat)[names(table.dat) == "anp"] <- "proANP"
names(table.dat)[names(table.dat) == "tkv"] <- "Total Kidney Volume"
#Paired scatter plots
colnames(table.dat)
pairs(table.dat[, c("eGFR", "Age", "proANP", "Total Kidney Volume")],
main = "Scatter Plot Matrix of eGFR, Age, proANP, and Total Kidney Volume",
pch = 21, bg = "lightblue")
table.dat$Age_Group <- cut(table.dat$Age, breaks = c(0, 30, 50, 70, 100),
labels = c("0-30", "31-50", "51-70", "71+"),
right = FALSE)
# Box plot of eGFR by Gender and Age Group
ggplot(table.dat, aes(x = gender, y = eGFR, fill = gender)) +
geom_boxplot() +
facet_wrap(~ Age_Group) +
labs(title = "eGFR by Gender and Age Group",
x = "Gender",
y = "Estimated GFR") +
theme_minimal()
```
names(table.dat)[names(table.dat) == "emgc_ca"] <- "Magnesium"
names(table.dat)[names(table.dat) == "epotcon"] <- "Potassium"
names(table.dat)[names(table.dat) == "esodc_ca"] <- "Sodium"
# Select relevant variables for correlation
cor_data <- table.dat %>% select(eGFR, Age, Magnesium, Potassium, Sodium)
# Calculate correlation matrix
cor_matrix <- cor(cor_data, use = "complete.obs")
# Melt the correlation matrix for ggplot
cor_melted <- melt(cor_matrix)
# Heatmap of correlations
ggplot(cor_melted, aes(Var1, Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0, limit = c(-1,1), name="Correlation") +
labs(title = "Correlation Matrix Heatmap of eGFR, Age, Magnesium Conc., Potassium Conc., and Sodium Conc. in Urine",
x = "Variables",
y = "Variables") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Box plot of eGFR by Gender and Age Group
ggplot(table.dat, aes(x = gender, y = eGFR, fill = gender)) +
geom_boxplot() +
facet_wrap(~ Age_Group) +
labs(title = "eGFR by Gender and Age Group",
x = "Gender",
y = "Estimated GFR") +
theme_minimal()
#Rename columns for convenience
names(table.dat)[names(table.dat) == "age"] <- "Age"
names(table.dat)[names(table.dat) == "ckd_epi"] <- "eGFR"
names(table.dat)[names(table.dat) == "anp"] <- "proANP"
names(table.dat)[names(table.dat) == "tkv"] <- "Total Kidney Volume"
#Paired scatter plots
colnames(table.dat)
pairs(table.dat[, c("eGFR", "Age", "proANP", "Total Kidney Volume")],
main = "Scatter Plot Matrix of eGFR, Age, proANP, and Total Kidney Volume",
pch = 21, bg = "lightblue")
```
#load the data
table.dat <- read.csv("crisp_sub_dataset_clean.csv")
names(table.dat)[names(table.dat) == "age"] <- "Age"
names(table.dat)[names(table.dat) == "ckd_epi"] <- "eGFR"
names(table.dat)[names(table.dat) == "anp"] <- "proANP"
#Paired scatter plots
colnames(table.dat)
pairs(table.dat[, c("eGFR", "Age", "proANP", "tkv")],
main = "Scatter Plot Matrix of eGFR, Age, proANP, and Total Kidney Volume",
pch = 21, bg = "lightblue")
# Create Age Group variable
table.dat$Age_Group <- cut(table.dat$Age, breaks = c(0, 30, 50, 70, 100),
labels = c("0-30", "31-50", "51-70", "71+"),
right = FALSE)
# Box plot of eGFR by Gender and Age Group
ggplot(table.dat, aes(x = gender, y = eGFR, fill = gender)) +
geom_boxplot() +
facet_wrap(~ Age_Group) +
labs(title = "eGFR by Gender and Age Group",
x = "Gender",
y = "Estimated GFR") +
theme_minimal()
# Rename columns for heatmap
names(table.dat)[names(table.dat) == "emgc_ca"] <- "Magnesium"
names(table.dat)[names(table.dat) == "epotcon"] <- "Potassium"
names(table.dat)[names(table.dat) == "esodc_ca"] <- "Sodium"
# Select relevant variables for correlation
cor_data <- table.dat %>% select(eGFR, Age, Magnesium, Potassium, Sodium)
# Calculate correlation matrix
cor_matrix <- cor(cor_data, use = "complete.obs")
# Melt the correlation matrix for ggplot
cor_melted <- melt(cor_matrix)
# Heatmap of correlations
ggplot(cor_melted, aes(Var1, Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0, limit = c(-1,1), name="Correlation") +
labs(title = "Correlation Matrix Heatmap of eGFR, Age, Magnesium Conc., Potassium Conc., and Sodium Conc. in Urine",
x = "Variables",
y = "Variables") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
names(table.dat)[names(table.dat) == "emgc_ca"] <- "Magnesium"
names(table.dat)[names(table.dat) == "epotcon"] <- "Potassium"
names(table.dat)[names(table.dat) == "esodc_ca"] <- "Sodium"
# Select relevant variables for correlation
cor_data <- table.dat %>% select(eGFR, Age, Magnesium, Potassium, Sodium)
# Calculate correlation matrix
cor_matrix <- cor(cor_data, use = "complete.obs")
# Melt the correlation matrix for ggplot
cor_melted <- melt(cor_matrix)
# Heatmap of correlations
ggplot(cor_melted, aes(Var1, Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0, limit = c(-1,1), name="Correlation") +
labs(title = "Correlation Matrix Heatmap of eGFR, Age, Magnesium Conc., Potassium Conc., and Sodium Conc. in Urine",
x = "Variables",
y = "Variables") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load required libraries
library(ggplot2)
library(dplyr)
library(knitr)
library(readr)
library(kableExtra)
install.packages("kableExtra")
library(kableExtra)
library(here)
data <- read_csv(here("data", "Maternal_Health_Risk_Data_Set.csv"))
summary_stats <- readRDS(here("output", "summary_stats.rds"))
knitr::kable(summary_stats, caption = "Summary Statistics of Maternal Health Dataset")
risk_level_summary <- readRDS(here("output", "risk_level_summary.rds"))
knitr::kable(risk_level_summary, caption = "Average Physiological Features by Risk Level")
heart_rate_distribution <- readRDS(here("output", "heart_rate_distribution.rds"))
knitr::kable(heart_rate_distribution, caption = "Heart Rate Distribution by Risk Level")
knitr::include_graphics(here("output", "age_boxplot.png"))
knitr::include_graphics(here("output", "heart_rate_boxplot.png"))
library(tidyverse)
library(gtsummary)
library(ggplot2)
library(here)
library(gt)
table_one <- readRDS(
here::here("output/table_one.rds"))
#| fig.cap = "Figure 1. Disribution of Glucose Levels"
figure1 <- readRDS(
here::here("output/figure_1.rds")
)
table2 <- readRDS(
here::here("output/log_regr_summary.rds")
)
table_one <- readRDS(
here::here("output", "table_one.rds"))
figure_1 <- readRDS("~/Documents/data550final/10jariwalap_data550/output/figure_1.rds")
log_regr_summary <- readRDS("~/Documents/data550final/10jariwalap_data550/output/log_regr_summary.rds")
table_one <- readRDS("~/Documents/data550final/10jariwalap_data550/output/table_one.rds")
table_one <- readRDS(
here::here("output", "table_one.rds"))
table_one <- readRDS(
here::here("output/table_one.rds"))
#| fig.cap = "Figure 1. Disribution of Glucose Levels"
figure1 <- readRDS(
here::here("output/figure_1.rds")
)
library(tidyverse)
library(gtsummary)
library(ggplot2)
library(here)
library(gt)
print(table_one)
table_one
figure1
figure1 <- readRDS(
here::here("output/figure_1.rds")
)
here::i_am(
"code/01_make_output.R"
)
setwd("~/Downloads/collaborating_using_renv")
here::i_am(
"code/01_make_output.R"
)
set.seed(1)
random_numbers1 <- rnorm(100)
saveRDS(
random_numbers1,
file = here::here("output", "random_numbers1.rds")
)
set.seed(2)
random_numbers2 <- rgamma(100, shape = 1)
saveRDS(
random_numbers2,
file = here::here("output", "random_numbers2.rds")
)
set.seed(3)
random_numbers3 <- runif(100)
saveRDS(
random_numbers3,
file = here::here("output", "random_numbers3.rds")
)
here::i_am(
"code/02_render_report.R"
)
rmarkdown::render(
here::here("report.Rmd")
)
library(renv)
renv::init()
setwd("~/Documents/DATA550/FinalProject")
library(tidyverse)
library(caret)
install.packages("caret")
dia = read.csv("~/Documents/DATA550/FinalProject/dataset/diabetes_012_health_indicators_BRFSS2015.csv")
#summary statistics
str(dia)
summary(dia)
#clean and convert into factor variables
dia_clean = dia
dia_clean$Diabetes_012 = as.factor(ifelse(dia_clean$Diabetes_012 == 0,0,1))
dia_clean = dia_clean |>
rename(isDiabetic = Diabetes_012)
dia_clean = dia_clean %>% mutate(across(!c("BMI","MentHlth","PhysHlth"), as.factor))
#check for missing values or duplicates
sum(is.na(dia))
sum(duplicated(dia_clean))
#remove duplicates
dia_clean = dia_clean |>
distinct()
dia_clean |>
ggplot(aes(x = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ),
fill = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ))) +
geom_bar(stat="count", alpha = 0.8) +
stat_count(geom = "text", color = "black", size = 3.5,
aes(label = paste("n = ", ..count..)),
position=position_stack(vjust=0.5)) +
labs(title = "Distrubution of diabetes", x= "", y= "", fill="is Diabetic")
#overall distribution of diabetes
dia_dist |>
ggplot(aes(x = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ),
fill = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ))) +
geom_bar(stat="count", alpha = 0.8) +
stat_count(geom = "text", color = "black", size = 3.5,
aes(label = paste("n = ", ..count..)),
position=position_stack(vjust=0.5)) +
labs(title = "Distribution of diabetes", x= "", y= "", fill="is Diabetic")
#overall distribution of diabetes
dia_clean |>
ggplot(aes(x = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ),
fill = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ))) +
geom_bar(stat="count", alpha = 0.8) +
stat_count(geom = "text", color = "black", size = 3.5,
aes(label = paste("n = ", ..count..)),
position=position_stack(vjust=0.5)) +
labs(title = "Distribution of diabetes", x= "", y= "", fill="is Diabetic")
#overall distribution of diabetes
dist_dia |>
ggplot(dia_clean, aes(x = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ),
fill = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ))) +
geom_bar(stat="count", alpha = 0.8) +
stat_count(geom = "text", color = "black", size = 3.5,
aes(label = paste("n = ", ..count..)),
position=position_stack(vjust=0.5)) +
labs(title = "Distribution of diabetes", x= "", y= "", fill="is Diabetic")
#overall distribution of diabetes
dist_dia <-
ggplot(dia_clean, aes(x = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ),
fill = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ))) +
geom_bar(stat="count", alpha = 0.8) +
stat_count(geom = "text", color = "black", size = 3.5,
aes(label = paste("n = ", ..count..)),
position=position_stack(vjust=0.5)) +
labs(title = "Distribution of diabetes", x= "", y= "", fill="is Diabetic")
print(dist_dia)
data <- read_csv(here("data", "diabetes_012_health_indicators_BRFSS2015.csv"))
library(here)
data <- read_csv(here("data", "diabetes_012_health_indicators_BRFSS2015.csv"))
library(here)
here::i_am("~/Documents/DATA550/FinalProject")
here::i_am("code/01_make_output1.R")
here("data", "diabetes_012_health_indicators_BRFSS2015.csv")
here("dataset", "diabetes_012_health_indicators_BRFSS2015.csv")
library(readr)
dia_clean <- readr::read_csv(here("dataset", "diabetes_012_health_indicators_BRFSS2015.csv"))
#overall distribution of diabetes
dist_dia <-
ggplot(dia_clean, aes(x = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ),
fill = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ))) +
geom_bar(stat="count", alpha = 0.8) +
stat_count(geom = "text", color = "black", size = 3.5,
aes(label = paste("n = ", ..count..)),
position=position_stack(vjust=0.5)) +
labs(title = "Distribution of diabetes", x= "", y= "", fill="is Diabetic")
print(dist_dia)
saveRDS(dia_clean, here("dataset", "dia_clean.RDS"))
#overall distribution of diabetes
dist_dia <-
ggplot(dia_clean, aes(x = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ),
fill = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ))) +
geom_bar(stat="count", alpha = 0.8) +
stat_count(geom = "text", color = "black", size = 3.5,
aes(label = paste("n = ", ..count..)),
position=position_stack(vjust=0.5)) +
labs(title = "Distribution of diabetes", x= "", y= "", fill="is Diabetic")
print(dist_dia)
dia_clean <- readRDS("~/Documents/DATA550/FinalProject/dataset/dia_clean.RDS")
View(dia_clean)
#Diabetes and blood pressure
dia_clean |>
ggplot(aes(x = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ),
fill = ifelse(HighBP == 1, "High", "Normal"))) +
geom_bar(stat="count", alpha = 0.8) +
stat_count(geom = "text", colour = "black", size = 3.5,
aes(label = paste("n = ", ..count..)),
position=position_stack(vjust=0.5)) +
labs(title = "High BP vs Diabetes", x= "", y= "", fill="Blood Pressure")
#download data from git repository
dia_url <- getURL("https://github.com/kairis96/DATA550-FinalProject/blob/main/dataset/diabetes_012_health_indicators_BRFSS2015.csv")
#load dataset and necessary packages
library(RCurl)
library(dplyr)
library(RCurl)
library(dplyr)
library(tidyverse)
library(here)
#download data from git repository
dia_url <- getURL("https://github.com/kairis96/DATA550-FinalProject/blob/main/dataset/diabetes_012_health_indicators_BRFSS2015.csv")
dia = read.csv(dia_url)
dia = read.csv(text= dia_url)
#summary statistics
str(dia)
summary(dia)
#clean and convert into factor variables
dia_clean = dia
dia_clean$Diabetes_012 = as.factor(ifelse(dia_clean$Diabetes_012 == 0,0,1))
dia_clean = dia_clean |>
rename(isDiabetic = Diabetes_012)
