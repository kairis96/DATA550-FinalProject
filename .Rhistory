labs(title = "Correlation Matrix Heatmap of eGFR, Age, Magnesium Conc., Potassium Conc., and Sodium Conc. in Urine",
x = "Variables",
y = "Variables") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Box plot of eGFR by Gender and Age Group
ggplot(table.dat, aes(x = gender, y = eGFR, fill = gender)) +
geom_boxplot() +
facet_wrap(~ Age_Group) +
labs(title = "eGFR by Gender and Age Group",
x = "Gender",
y = "Estimated GFR") +
theme_minimal()
#Rename columns for convenience
names(table.dat)[names(table.dat) == "age"] <- "Age"
names(table.dat)[names(table.dat) == "ckd_epi"] <- "eGFR"
names(table.dat)[names(table.dat) == "anp"] <- "proANP"
names(table.dat)[names(table.dat) == "tkv"] <- "Total Kidney Volume"
#Paired scatter plots
colnames(table.dat)
pairs(table.dat[, c("eGFR", "Age", "proANP", "Total Kidney Volume")],
main = "Scatter Plot Matrix of eGFR, Age, proANP, and Total Kidney Volume",
pch = 21, bg = "lightblue")
```
#load the data
table.dat <- read.csv("crisp_sub_dataset_clean.csv")
names(table.dat)[names(table.dat) == "age"] <- "Age"
names(table.dat)[names(table.dat) == "ckd_epi"] <- "eGFR"
names(table.dat)[names(table.dat) == "anp"] <- "proANP"
#Paired scatter plots
colnames(table.dat)
pairs(table.dat[, c("eGFR", "Age", "proANP", "tkv")],
main = "Scatter Plot Matrix of eGFR, Age, proANP, and Total Kidney Volume",
pch = 21, bg = "lightblue")
# Create Age Group variable
table.dat$Age_Group <- cut(table.dat$Age, breaks = c(0, 30, 50, 70, 100),
labels = c("0-30", "31-50", "51-70", "71+"),
right = FALSE)
# Box plot of eGFR by Gender and Age Group
ggplot(table.dat, aes(x = gender, y = eGFR, fill = gender)) +
geom_boxplot() +
facet_wrap(~ Age_Group) +
labs(title = "eGFR by Gender and Age Group",
x = "Gender",
y = "Estimated GFR") +
theme_minimal()
# Rename columns for heatmap
names(table.dat)[names(table.dat) == "emgc_ca"] <- "Magnesium"
names(table.dat)[names(table.dat) == "epotcon"] <- "Potassium"
names(table.dat)[names(table.dat) == "esodc_ca"] <- "Sodium"
# Select relevant variables for correlation
cor_data <- table.dat %>% select(eGFR, Age, Magnesium, Potassium, Sodium)
# Calculate correlation matrix
cor_matrix <- cor(cor_data, use = "complete.obs")
# Melt the correlation matrix for ggplot
cor_melted <- melt(cor_matrix)
# Heatmap of correlations
ggplot(cor_melted, aes(Var1, Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0, limit = c(-1,1), name="Correlation") +
labs(title = "Correlation Matrix Heatmap of eGFR, Age, Magnesium Conc., Potassium Conc., and Sodium Conc. in Urine",
x = "Variables",
y = "Variables") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
names(table.dat)[names(table.dat) == "emgc_ca"] <- "Magnesium"
names(table.dat)[names(table.dat) == "epotcon"] <- "Potassium"
names(table.dat)[names(table.dat) == "esodc_ca"] <- "Sodium"
# Select relevant variables for correlation
cor_data <- table.dat %>% select(eGFR, Age, Magnesium, Potassium, Sodium)
# Calculate correlation matrix
cor_matrix <- cor(cor_data, use = "complete.obs")
# Melt the correlation matrix for ggplot
cor_melted <- melt(cor_matrix)
# Heatmap of correlations
ggplot(cor_melted, aes(Var1, Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0, limit = c(-1,1), name="Correlation") +
labs(title = "Correlation Matrix Heatmap of eGFR, Age, Magnesium Conc., Potassium Conc., and Sodium Conc. in Urine",
x = "Variables",
y = "Variables") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load required libraries
library(ggplot2)
library(dplyr)
library(knitr)
library(readr)
library(kableExtra)
install.packages("kableExtra")
library(kableExtra)
library(here)
data <- read_csv(here("data", "Maternal_Health_Risk_Data_Set.csv"))
summary_stats <- readRDS(here("output", "summary_stats.rds"))
knitr::kable(summary_stats, caption = "Summary Statistics of Maternal Health Dataset")
risk_level_summary <- readRDS(here("output", "risk_level_summary.rds"))
knitr::kable(risk_level_summary, caption = "Average Physiological Features by Risk Level")
heart_rate_distribution <- readRDS(here("output", "heart_rate_distribution.rds"))
knitr::kable(heart_rate_distribution, caption = "Heart Rate Distribution by Risk Level")
knitr::include_graphics(here("output", "age_boxplot.png"))
knitr::include_graphics(here("output", "heart_rate_boxplot.png"))
library(tidyverse)
library(gtsummary)
library(ggplot2)
library(here)
library(gt)
table_one <- readRDS(
here::here("output/table_one.rds"))
#| fig.cap = "Figure 1. Disribution of Glucose Levels"
figure1 <- readRDS(
here::here("output/figure_1.rds")
)
table2 <- readRDS(
here::here("output/log_regr_summary.rds")
)
table_one <- readRDS(
here::here("output", "table_one.rds"))
figure_1 <- readRDS("~/Documents/data550final/10jariwalap_data550/output/figure_1.rds")
log_regr_summary <- readRDS("~/Documents/data550final/10jariwalap_data550/output/log_regr_summary.rds")
table_one <- readRDS("~/Documents/data550final/10jariwalap_data550/output/table_one.rds")
table_one <- readRDS(
here::here("output", "table_one.rds"))
table_one <- readRDS(
here::here("output/table_one.rds"))
#| fig.cap = "Figure 1. Disribution of Glucose Levels"
figure1 <- readRDS(
here::here("output/figure_1.rds")
)
library(tidyverse)
library(gtsummary)
library(ggplot2)
library(here)
library(gt)
print(table_one)
table_one
figure1
figure1 <- readRDS(
here::here("output/figure_1.rds")
)
setwd("~/Documents/DATA550/FinalProject")
#save output to output folder
multi_mod <- list(
model = multinom_model
)
#load dataset and necessary packages
library(dplyr)
library(tidyverse)
library(here)
#download data from project directory
here::i_am("code/00_make_data_clean.R")
absolute_path_to_data <- here::here("dataset", "diabetes_012_health_indicators_BRFSS2015.csv")
dia <- read.csv(absolute_path_to_data, header = TRUE)
#summary statistics
str(dia)
summary(dia)
#clean and convert into factor variables
dia_clean = dia
dia_clean$Diabetes_012 = as.factor(ifelse(dia_clean$Diabetes_012 == 0,0,1))
dia_clean = dia_clean |>
rename(isDiabetic = Diabetes_012)
dia_clean = dia_clean %>% mutate(across(!c("BMI","MentHlth","PhysHlth"), as.factor))
#check for missing values or duplicates
sum(is.na(dia))
sum(duplicated(dia_clean))
#remove duplicates
dia_clean = dia_clean |>
distinct()
#save data into RDS file
saveRDS(dia_clean, file = here::here("dataset/dia_clean.RDS"))
#load necessary packages
library(here)
#load data
here::i_am("code/01_make_output1.R")
dia_clean <- readRDS(
file = here::here("dataset/dia_clean.RDS")
)
#bar graph for overall distribution of diabetes
dist_dia <-
ggplot(dia_clean, aes(x = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ),
fill = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ))) +
geom_bar(stat="count", alpha = 0.8) +
stat_count(geom = "text", color = "black", size = 3.5,
aes(label = paste("n = ", ..count..)),
position=position_stack(vjust=0.5)) +
labs(title = "Distribution of diabetes", x= "", y= "", fill="is Diabetic")
#save plot to output folder
ggsave(
here::here("output/bargraph.png"),
device = "png"
)
#relative file path
here::i_am("code/02_make_output2.R")
#load data
dia_clean <- readRDS(
file = here::here("dataset/dia_clean.RDS")
)
library(ggplot2)
#bar graph to show diabetes and blood pressure
dia_clean |>
ggplot(aes(x = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ),
fill = ifelse(HighBP == 1, "High", "Normal"))) +
geom_bar(stat="count", alpha = 0.8) +
stat_count(geom = "text", colour = "black", size = 3.5,
aes(label = paste("n = ", ..count..)),
position=position_stack(vjust=0.5)) +
labs(title = "High BP vs Diabetes", x= "", y= "", fill="Blood Pressure")
#save plot to output folder
ggsave(
here::here("output/stackbargraph.png"),
device = "png"
)
#relative file path
here::i_am("code/01_make_output1.R")
#load data
dia_clean <- readRDS(
file = here::here("dataset/dia_clean.RDS")
)
#scatterplot to show the relationship between age and BMI
scatterplot <- ggplot(dia_clean, aes(x=Age, y=BMI, color=isDiabetic)) +
geom_jitter(alpha=0.6) +
geom_smooth(method='loess', se=FALSE) +
scale_color_manual(values=c("0"="lightblue", "1"="lightcoral")) +
labs(title="Age vs BMI by Diabetes Status", x="Age", y="BMI") +
theme_minimal()
#save plot to output folder
ggsave(
here::here("output/scatterplot.png"),
device = "png"
)
#relative file path
here::i_am("code/04_make_model.R")
#load data
dia_clean <- readRDS(
file = here::here("dataset/dia_clean.RDS")
)
# Split the data into training and testing sets
set.seed(123)
trainIndex <- createDataPartition(dia_clean$isDiabetic, p = .8,
list = FALSE,
times = 1)
library(caret)
trainIndex <- createDataPartition(dia_clean$isDiabetic, p = .8,
list = FALSE,
times = 1)
diaTrain <- dia_clean[ trainIndex,]
diaTest  <- dia_clean[-trainIndex,]
# Fit the multinomial logistic regression model
multinom_model <- multinom(isDiabetic ~ ., data = diaTrain)
# Load necessary libraries
library(nnet)
# Fit the multinomial logistic regression model
multinom_model <- multinom(isDiabetic ~ ., data = diaTrain)
summary(multinom_model)
#save output to output folder
multi_mod <- list(
model = multinom_model
)
saveRDS(
multi_mod,
file = here::here("output/multinomial.rds")
)
#relative pathway
here::i_am(
"code/05_render_report.R"
)
rmarkdown::render(
here::here("Report.Rmd")
)
here::i_am("Report.Rmd")
dia_clean <- readRDS(
file = here::here("dataset/dia_clean.RDS")
)
multinomial_regression <- readRDS(
file = here::here("output/multinomial.rds")
)
summary(multinomial_regression)
saveRDS(
multinom_model,
file = here::here("output/multinomial.rds")
)
multinomial_regression <- readRDS(
file = here::here("output/multinomial.rds")
)
summary(multinomial_regression)
library(dplyr)
library(tidyverse)
library(here)
library(ggplot2)
library(nnet)
library(caret)
#| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("output/bargraph.png")
)
##| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("output/stackbargraph.png")
)
##| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("output/scatterplot.png")
)
#| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("output/bargraph.png")
)
##| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("output/stackbargraph.png")
)
#relative file path
here::i_am("code/04_make_model.R")
#load data
dia_clean <- readRDS(
file = here::here("dataset/dia_clean.RDS")
)
# Load necessary libraries
library(nnet)
library(caret)
library(gtsummary)
# Split the data into training and testing sets
set.seed(123)
trainIndex <- createDataPartition(dia_clean$isDiabetic, p = .8,
list = FALSE,
times = 1)
diaTrain <- dia_clean[ trainIndex,]
diaTest  <- dia_clean[-trainIndex,]
# Check the structure of the training data
str(diaTrain)
# Fit the multinomial logistic regression model
multinom_model <- multinom(isDiabetic ~ ., data = diaTrain)
summary(multinom_model)
#save output to output folder
saveRDS(
multinom_model,
file = here::here("output/multinomial.rds")
)
saveRDS(dist_dia, file = here::here("output/bargraph.rds"))
library(make)
install.packages("make")
library(renv)
renv::init()
install.packages("make")
absolute_path_to_data <- here::here("dataset", "diabetes_012_health_indicators_BRFSS2015.csv")
#load dataset and necessary packages
library(dplyr)
library(tidyverse)
library(here)
#download data from project directory
here::i_am("code/00_make_data_clean.R")
absolute_path_to_data <- here::here("dataset", "diabetes_012_health_indicators_BRFSS2015.csv")
dia <- read.csv(absolute_path_to_data, header = TRUE)
#summary statistics
str(dia)
summary(dia)
#clean and convert into factor variables
dia_clean = dia
dia_clean$Diabetes_012 = as.factor(ifelse(dia_clean$Diabetes_012 == 0,0,1))
dia_clean = dia_clean |>
rename(isDiabetic = Diabetes_012)
dia_clean = dia_clean %>% mutate(across(!c("BMI","MentHlth","PhysHlth"), as.factor))
#check for missing values or duplicates
sum(is.na(dia))
sum(duplicated(dia_clean))
#remove duplicates
dia_clean = dia_clean |>
distinct()
#save data into RDS file
saveRDS(dia_clean, file = here::here("dataset/dia_clean.RDS"))
#load necessary packages
library(here)
#load data
here::i_am("code/01_make_output1.R")
dia_clean <- readRDS(
file = here::here("dataset/dia_clean.RDS")
)
#bar graph for overall distribution of diabetes
dist_dia <-
ggplot(dia_clean, aes(x = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ),
fill = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ))) +
geom_bar(stat="count", alpha = 0.8) +
stat_count(geom = "text", color = "black", size = 3.5,
aes(label = paste("n = ", ..count..)),
position=position_stack(vjust=0.5)) +
labs(title = "Distribution of diabetes", x= "", y= "", fill="is Diabetic")
#save plot to output folder
ggsave(
here::here("output/bargraph.png"),
device = "png"
)
saveRDS(dist_dia, file = here::here("output/bargraph.rds"))
#relative file path
here::i_am("code/02_make_output2.R")
#load data
dia_clean <- readRDS(
file = here::here("dataset/dia_clean.RDS")
)
library(ggplot2)
#bar graph to show diabetes and blood pressure
dia_clean |>
ggplot(aes(x = ifelse(isDiabetic == 1, "Diabetic", "Non Diabetic" ),
fill = ifelse(HighBP == 1, "High", "Normal"))) +
geom_bar(stat="count", alpha = 0.8) +
stat_count(geom = "text", colour = "black", size = 3.5,
aes(label = paste("n = ", ..count..)),
position=position_stack(vjust=0.5)) +
labs(title = "High BP vs Diabetes", x= "", y= "", fill="Blood Pressure")
#save plot to output folder
ggsave(
here::here("output/stackbargraph.png"),
device = "png"
)
saveRDS(dist_dia, file = here::here("output/bargraph.rds"))
#relative file path
here::i_am("code/01_make_output1.R")
#load data
dia_clean <- readRDS(
file = here::here("dataset/dia_clean.RDS")
)
library(ggplot2)
#scatterplot to show the relationship between age and BMI
scatterplot <- ggplot(dia_clean, aes(x=Age, y=BMI, color=isDiabetic)) +
geom_jitter(alpha=0.6) +
geom_smooth(method='loess', se=FALSE) +
scale_color_manual(values=c("0"="lightblue", "1"="lightcoral")) +
labs(title="Age vs BMI by Diabetes Status", x="Age", y="BMI") +
theme_minimal()
#save plot to output folder
ggsave(
here::here("output/scatterplot.png"),
device = "png"
)
#relative file path
here::i_am("code/04_make_model.R")
#load data
dia_clean <- readRDS(
file = here::here("dataset/dia_clean.RDS")
)
# Load necessary libraries
library(nnet)
library(caret)
library(gtsummary)
# Split the data into training and testing sets
set.seed(123)
trainIndex <- createDataPartition(dia_clean$isDiabetic, p = .8,
list = FALSE,
times = 1)
diaTrain <- dia_clean[ trainIndex,]
diaTest  <- dia_clean[-trainIndex,]
# Check the structure of the training data
str(diaTrain)
# Fit the multinomial logistic regression model
multinom_model <- multinom(isDiabetic ~ ., data = diaTrain)
summary(multinom_model)
#save output to output folder
saveRDS(
multinom_model,
file = here::here("output/multinomial.rds")
)
#relative pathway
here::i_am(
"code/05_render_report.R"
)
#render report
rmarkdown::render(
here::here("Report.Rmd")
)
renv::init()
here::i_am("Report.Rmd")
dia_clean <- readRDS(
file = here::here("dataset/dia_clean.RDS")
)
library(dplyr)
library(tidyverse)
library(here)
library(ggplot2)
library(nnet)
library(caret)
library(renv)
#| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("output/bargraph.png")
)
##| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("output/stackbargraph.png")
)
##| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("output/scatterplot.png")
)
set.seed(123)
trainIndex <- createDataPartition(dia_clean$isDiabetic, p = .8,
list = FALSE,
times = 1)
diaTrain <- dia_clean[ trainIndex,]
diaTest  <- dia_clean[-trainIndex,]
multinomial_regression <- readRDS(
file = here::here("output/multinomial.rds")
)
summary(multinomial_regression)
